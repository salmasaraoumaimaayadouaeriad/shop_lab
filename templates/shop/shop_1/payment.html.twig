<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - Complete Your Payment</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800;900&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #111111;
            --secondary-color: #6c757d;
            --background-color: #f8f8f8;
            --button-color: #e74c3c;
            --border-radius: 8px;
            --card-bg: #fff;
            --border-color: #dee2e6;
            --success-color: #28a745;
            --danger-color: #dc3545;
        }
        body {
            font-family: 'Inter', sans-serif;
            background: var(--background-color);
            color: #212529;
        }
        .checkout-container {
            max-width: 900px;
            margin: 2rem auto;
            background: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: 0 4px 24px rgba(0,0,0,0.07);
            padding: 2rem 2.5rem;
        }
        .checkout-title {
            font-size: 2.2rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 1.5rem;
        }
        .section-title {
            font-size: 1.25rem;
            font-weight: 600;
            margin-bottom: 1rem;
            color: var(--primary-color);
        }
        .form-label { font-weight: 600; }
        .form-control:focus { border-color: var(--button-color); box-shadow: 0 0 0 2px rgba(231,76,60,0.1); }
        .btn-custom {
            background: var(--button-color);
            color: #fff;
            border: none;
            border-radius: var(--border-radius);
            padding: 0.75rem 2rem;
            font-weight: 600;
            transition: all 0.2s;
        }
        .btn-custom:hover { background: #c0392b; color: #fff; }
        .btn-outline-custom {
            background: transparent;
            color: var(--button-color);
            border: 2px solid var(--button-color);
            border-radius: var(--border-radius);
            padding: 0.75rem 2rem;
            font-weight: 600;
            transition: all 0.2s;
        }
        .btn-outline-custom:hover { background: var(--button-color); color: #fff; }
        .cart-summary {
            background: #fafafa;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            margin-bottom: 2rem;
        }
        .cart-item {
            display: flex;
            align-items: center;
            border-bottom: 1px solid var(--border-color);
            padding: 0.75rem 0;
        }
        .cart-item:last-child { border-bottom: none; }
        .cart-item-img {
            width: 60px; height: 60px; object-fit: cover; border-radius: var(--border-radius); margin-right: 1rem;
        }
        .cart-item-details { flex: 1; }
        .cart-item-name { font-weight: 600; }
        .cart-item-qty { color: var(--secondary-color); font-size: 0.95rem; }
        .cart-item-price { font-weight: 600; color: var(--primary-color); }
        .cart-total-row { display: flex; justify-content: space-between; font-size: 1.1rem; font-weight: 700; margin-top: 1rem; }
        .error-message { color: var(--danger-color); font-size: 0.95rem; margin-top: 0.25rem; }
        .success-message { color: var(--success-color); font-size: 1.1rem; margin-top: 1rem; }
        .payment-method-selector { display: flex; gap: 1.5rem; margin-bottom: 1.5rem; }
        .payment-method-option {
            flex: 1;
            padding: 1rem;
            border: 2px solid var(--border-color);
            border-radius: var(--border-radius);
            cursor: pointer;
            text-align: center;
            font-weight: 600;
            transition: all 0.2s;
        }
        .payment-method-option.selected { border-color: var(--button-color); background: #fff0ee; }
        .payment-method-option:hover { border-color: var(--button-color); }
        .payment-section { display: none; }
        .payment-section.active { display: block; }
        @media (max-width: 600px) {
            .checkout-container { padding: 1rem 0.5rem; }
            .cart-item-img { width: 40px; height: 40px; }
        }
    </style>
</head>
<body>
<div class="checkout-container">
    <div class="checkout-title">Checkout</div>
    <!-- Cart Summary -->
    <div class="section-title">Your Cart</div>
    <div class="cart-summary" id="cartSummary"></div>
    <!-- Customer Info -->
    <form id="checkoutForm">
        <div class="section-title">Shipping Information</div>
        <div class="row g-3">
            <div class="col-md-6">
                <label class="form-label">First Name *</label>
                <input type="text" class="form-control" name="first_name" id="firstName" required>
                <div class="error-message" id="firstNameError"></div>
            </div>
            <div class="col-md-6">
                <label class="form-label">Last Name *</label>
                <input type="text" class="form-control" name="last_name" id="lastName" required>
                <div class="error-message" id="lastNameError"></div>
            </div>
            <div class="col-md-6">
                <label class="form-label">Email *</label>
                <input type="email" class="form-control" name="email" id="email" required>
                <div class="error-message" id="emailError"></div>
            </div>
            <div class="col-md-6">
                <label class="form-label">Phone *</label>
                <input type="tel" class="form-control" name="phone" id="phone" required>
                <div class="error-message" id="phoneError"></div>
            </div>
            <div class="col-12">
                <label class="form-label">Street Address *</label>
                <input type="text" class="form-control" name="address" id="address" required>
                <div class="error-message" id="addressError"></div>
            </div>
            <div class="col-md-4">
                <label class="form-label">City *</label>
                <input type="text" class="form-control" name="city" id="city" required>
                <div class="error-message" id="cityError"></div>
            </div>
            <div class="col-md-4">
                <label class="form-label">Postal Code *</label>
                <input type="text" class="form-control" name="postal_code" id="postalCode" required>
                <div class="error-message" id="postalCodeError"></div>
            </div>
            <div class="col-md-4">
                <label class="form-label">Country *</label>
                <input type="text" class="form-control" name="country" id="country" required>
                <div class="error-message" id="countryError"></div>
            </div>
        </div>
        <div class="section-title mt-4">Payment Method</div>
        <div class="payment-method-selector">
            <div class="payment-method-option selected" data-method="card">
                <i class="fas fa-credit-card fa-lg"></i><br>Credit/Debit Card
            </div>
            <div class="payment-method-option" data-method="bank">
                <i class="fas fa-university fa-lg"></i><br>Bank Transfer
            </div>
        </div>
        <div id="card-section" class="payment-section active">
            <div class="mb-3">
                <label class="form-label">Card Details</label>
                <div id="card-element" style="padding: 1rem; border: 1px solid var(--border-color); border-radius: var(--border-radius); background: #fafafa;"></div>
                <div class="error-message" id="cardError"></div>
            </div>
        </div>
        <div id="bank-section" class="payment-section">
            <div class="mb-3">
                <label class="form-label">RIB Code *</label>
                <input type="text" class="form-control" name="rib_code" id="ribCode">
                <div class="error-message" id="ribCodeError"></div>
            </div>
            <div class="mb-3">
                <label class="form-label">Bank Name *</label>
                <input type="text" class="form-control" name="bank_name" id="bankName">
                <div class="error-message" id="bankNameError"></div>
            </div>
            <div class="mb-3">
                <label class="form-label">Account Holder *</label>
                <input type="text" class="form-control" name="account_holder" id="accountHolder">
                <div class="error-message" id="accountHolderError"></div>
            </div>
        </div>
        <input type="hidden" name="payment_method" id="paymentMethod" value="card">
        <div class="mt-4 d-flex justify-content-end">
            <button type="submit" class="btn-custom" id="payBtn"><i class="fas fa-credit-card me-2"></i>Pay Now</button>
        </div>
        <div class="success-message" id="successMessage" style="display:none;"></div>
        <div class="error-message" id="submitError" style="display:none;"></div>
    </form>
</div>
<script src="https://js.stripe.com/v3/"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
// --- Cart Summary ---
function renderCartSummary() {
    const cart = JSON.parse(localStorage.getItem('cart')) || [];
    const cartSummary = document.getElementById('cartSummary');
    if (!cart.length) {
        cartSummary.innerHTML = '<div class="text-center text-muted">Your cart is empty.</div>';
        document.getElementById('payBtn').disabled = true;
        return;
    }
    let total = 0;
    cartSummary.innerHTML = cart.map(item => {
        total += parseFloat(item.price) * item.quantity;
        return `<div class="cart-item">
            <img src="${item.image}" class="cart-item-img" alt="${item.name}">
            <div class="cart-item-details">
                <div class="cart-item-name">${item.name}</div>
                <div class="cart-item-qty">Qty: ${item.quantity}</div>
            </div>
            <div class="cart-item-price">$${(parseFloat(item.price) * item.quantity).toFixed(2)}</div>
        </div>`;
    }).join('') + `<div class="cart-total-row"><span>Total</span><span>$${total.toFixed(2)}</span></div>`;
}
renderCartSummary();
// --- Payment Method Toggle ---
document.querySelectorAll('.payment-method-option').forEach(option => {
    option.addEventListener('click', function() {
        document.querySelectorAll('.payment-method-option').forEach(opt => opt.classList.remove('selected'));
        this.classList.add('selected');
        document.getElementById('paymentMethod').value = this.dataset.method;
        document.querySelectorAll('.payment-section').forEach(section => section.classList.remove('active'));
        if (this.dataset.method === 'card') {
            document.getElementById('card-section').classList.add('active');
        } else {
            document.getElementById('bank-section').classList.add('active');
        }
    });
});
// --- Stripe Setup ---
let stripe = Stripe('{{ stripe_public_key }}');
let elements = stripe.elements();
let card = elements.create('card', {
    style: { base: { fontSize: '16px', color: '#212529', '::placeholder': { color: '#adb5bd' } } }
});
card.mount('#card-element');
card.on('change', function(event) {
    document.getElementById('cardError').textContent = event.error ? event.error.message : '';
});
// --- Pre-fill Shipping Info (if available) ---
window.addEventListener('DOMContentLoaded', function() {
    fetch('/shop/get-customer-address')
        .then(res => res.json())
        .then(data => {
            if (data && data.success && data.address) {
                document.getElementById('firstName').value = data.address.first_name || '';
                document.getElementById('lastName').value = data.address.last_name || '';
                document.getElementById('email').value = data.address.email || '';
                document.getElementById('phone').value = data.address.phone || '';
                document.getElementById('address').value = data.address.address || '';
                document.getElementById('city').value = data.address.city || '';
                document.getElementById('postalCode').value = data.address.postal_code || '';
                document.getElementById('country').value = data.address.country || '';
            }
        });
});
// --- Form Submission ---
document.getElementById('checkoutForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    // Clear errors
    document.querySelectorAll('.error-message').forEach(el => el.textContent = '');
    document.getElementById('submitError').style.display = 'none';
    document.getElementById('successMessage').style.display = 'none';
    // Validate required fields
    let valid = true;
    ['firstName','lastName','email','phone','address','city','postalCode','country'].forEach(id => {
        const el = document.getElementById(id);
        if (!el.value.trim()) {
            document.getElementById(id+'Error').textContent = 'Required';
            valid = false;
        }
    });
    if (!valid) return;
    const cart = JSON.parse(localStorage.getItem('cart')) || [];
    if (!cart.length) {
        document.getElementById('submitError').textContent = 'Your cart is empty.';
        document.getElementById('submitError').style.display = 'block';
        return;
    }
    const paymentMethod = document.getElementById('paymentMethod').value;
    let paymentData = {
        first_name: document.getElementById('firstName').value,
        last_name: document.getElementById('lastName').value,
        email: document.getElementById('email').value,
        phone: document.getElementById('phone').value,
        address: document.getElementById('address').value,
        city: document.getElementById('city').value,
        postal_code: document.getElementById('postalCode').value,
        country: document.getElementById('country').value,
        cart: cart.map(item => ({ productId: item.id, quantity: item.quantity })),
        payment_method: paymentMethod
    };
    if (paymentMethod === 'card') {
        document.getElementById('payBtn').disabled = true;
        const { paymentMethod: stripePaymentMethod, error } = await stripe.createPaymentMethod({
            type: 'card', card: card,
            billing_details: {
                name: paymentData.first_name + ' ' + paymentData.last_name,
                email: paymentData.email,
                address: {
                    line1: paymentData.address,
                    city: paymentData.city,
                    postal_code: paymentData.postal_code,
                    country: paymentData.country
                }
            }
        });
        if (error) {
            document.getElementById('cardError').textContent = error.message;
            document.getElementById('payBtn').disabled = false;
            return;
        }
        paymentData.stripe_payment_method = stripePaymentMethod.id;
    } else {
        // Validate bank fields
        ['ribCode','bankName','accountHolder'].forEach(id => {
            if (!document.getElementById(id).value.trim()) {
                document.getElementById(id+'Error').textContent = 'Required';
                valid = false;
            }
        });
        if (!valid) return;
        paymentData.rib_code = document.getElementById('ribCode').value;
        paymentData.bank_name = document.getElementById('bankName').value;
        paymentData.account_holder = document.getElementById('accountHolder').value;
    }
    // Get slug from URL
    const slugMatch = window.location.pathname.match(/\/shop\/([^\/]+)/);
    const slug = slugMatch ? slugMatch[1] : null;
    if (!slug) {
        document.getElementById('submitError').textContent = 'Boutique slug not found in URL!';
        document.getElementById('submitError').style.display = 'block';
        return;
    }
    // Submit to backend
    fetch(`/shop/${slug}/order/place`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(paymentData)
    })
    .then(res => res.json())
    .then(result => {
        if (result.success) {
            document.getElementById('successMessage').textContent = 'Order placed successfully! Redirecting to shop...';
            document.getElementById('successMessage').style.display = 'block';
            
            // Clear current cart
            localStorage.removeItem('cart');
            renderCartSummary();
            document.getElementById('payBtn').disabled = true;
            
            // Redirect to public shop page after 2 seconds
            setTimeout(() => {
                if (result.redirect) {
                    window.location.href = result.redirect + '?success=true';
                } else {
                    window.location.href = `/shop/${slug}?success=true`;
                }
            }, 2000);
        } else {
            document.getElementById('submitError').textContent = result.message || 'Order failed.';
            document.getElementById('submitError').style.display = 'block';
            document.getElementById('payBtn').disabled = false;
        }
    })
    .catch(() => {
        document.getElementById('submitError').textContent = 'Order error. Please try again.';
        document.getElementById('submitError').style.display = 'block';
        document.getElementById('payBtn').disabled = false;
    });
});
</script>
</body>
</html>
